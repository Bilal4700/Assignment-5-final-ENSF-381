{"ast":null,"code":"var _jsxFileName = \"/Users/bilalkharal/University of calgary/SEM 4/ENSF 381/Assignment 05/Final assignment 5/ENSF-381-Assignment-5-final-/assignment 5/src/components/ProductList.js\",\n  _s = $RefreshSig$();\n// ProductList.js\nimport React, { useState, useEffect } from 'react';\nimport Product from './Product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = ({\n  onAddToCart\n}) => {\n  _s();\n  // State to store the fetched products\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Fetch product data from backend API when component mounts\n    fetch('http://localhost:5000/products') // Make sure to replace 'http://localhost:5000/products' with the actual URL of your backend API endpoint where the product data is served.\n    .then(response => response.json()) // Parse response as JSON\n    .then(data => setProducts(data)) // Set fetched products to state\n    .catch(error => console.error('Error fetching products:', error)); // Handle fetch errors\n  }, []); // Empty dependency array ensures effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list\",\n    children: products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n      product: product,\n      onAddToCart: onAddToCart\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","Product","jsxDEV","_jsxDEV","ProductList","onAddToCart","_s","products","setProducts","fetch","then","response","json","data","catch","error","console","className","children","map","product","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bilalkharal/University of calgary/SEM 4/ENSF 381/Assignment 05/Final assignment 5/ENSF-381-Assignment-5-final-/assignment 5/src/components/ProductList.js"],"sourcesContent":["// ProductList.js\nimport React, { useState, useEffect } from 'react';\nimport Product from './Product';\n\nconst ProductList = ({ onAddToCart }) => {\n  // State to store the fetched products\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    // Fetch product data from backend API when component mounts\n    fetch('http://localhost:5000/products')     // Make sure to replace 'http://localhost:5000/products' with the actual URL of your backend API endpoint where the product data is served.\n      .then(response => response.json()) // Parse response as JSON\n      .then(data => setProducts(data)) // Set fetched products to state\n      .catch(error => console.error('Error fetching products:', error)); // Handle fetch errors\n  }, []); // Empty dependency array ensures effect runs only once on mount\n\n  return (\n    <div className=\"product-list\">\n      {/* Map over products array to render each product */}\n      {products.map(product => (\n        <Product key={product.id} product={product} onAddToCart={onAddToCart} />\n      ))}\n    </div>\n  );\n};\n\nexport default ProductList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,gCAAgC,CAAC,CAAK;IAAA,CACzCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CAClCF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC,CAAC;IAAA,CAChCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAC,QAAA,EAE1BX,QAAQ,CAACY,GAAG,CAACC,OAAO,iBACnBjB,OAAA,CAACF,OAAO;MAAkBmB,OAAO,EAAEA,OAAQ;MAACf,WAAW,EAAEA;IAAY,GAAvDe,OAAO,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CACxE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CApBIF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAsBjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}